<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
 "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 2.43.0 (0)
 -->
<!-- Title: Graphical Class Hierarchy Pages: 1 -->
<svg width="338pt" height="626pt"
 viewBox="0.00 0.00 338.00 626.00" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<g id="graph0" class="graph" transform="scale(1 1) rotate(0) translate(4 622)">
<title>Graphical Class Hierarchy</title>
<!-- Node0 -->
<g id="node1" class="node">
<title>Node0</title>
<g id="a_node1"><a xlink:href="https://en.cppreference.com/w/cpp/types/integral_constant.html" xlink:title=" ">
<polygon fill="none" stroke="black" points="0,-288 0,-307 84,-307 84,-288 0,-288"/>
<text text-anchor="middle" x="42" y="-295" font-family="Helvetica,sans-Serif" font-size="10.00">std::true_type</text>
</a>
</g>
</g>
<!-- Node1 -->
<g id="node2" class="node">
<title>Node1</title>
<g id="a_node2"><a xlink:href="structBipedalLocomotion_1_1GenericContainer_1_1is__span__constructible_3_01Class_00_01typename_075ffca013f10d11599823b4dea1e9407.html" target="_top" xlink:title="is_span_constructible is a utility metafunction to check if iDynTree::Span is constructible given a r...">
<polygon fill="none" stroke="black" points="120,-521.5 120,-617.5 330,-617.5 330,-521.5 120,-521.5"/>
<text text-anchor="start" x="128" y="-605.5" font-family="Helvetica,sans-Serif" font-size="10.00">BipedalLocomotion::</text>
<text text-anchor="start" x="128" y="-594.5" font-family="Helvetica,sans-Serif" font-size="10.00">GenericContainer::is</text>
<text text-anchor="start" x="128" y="-583.5" font-family="Helvetica,sans-Serif" font-size="10.00">_span_constructible&lt;</text>
<text text-anchor="start" x="128" y="-572.5" font-family="Helvetica,sans-Serif" font-size="10.00"> Class, typename std::</text>
<text text-anchor="start" x="128" y="-561.5" font-family="Helvetica,sans-Serif" font-size="10.00">enable_if&lt; std::is_constructible</text>
<text text-anchor="start" x="128" y="-550.5" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; iDynTree::Span&lt; typename container</text>
<text text-anchor="start" x="128" y="-539.5" font-family="Helvetica,sans-Serif" font-size="10.00">_data&lt; Class &gt;::type &gt;, Class &amp; &gt;</text>
<text text-anchor="middle" x="225" y="-528.5" font-family="Helvetica,sans-Serif" font-size="10.00">::value &gt;::type &gt;</text>
</a>
</g>
</g>
<!-- Node0&#45;&gt;Node1 -->
<g id="edge1" class="edge">
<title>Node0&#45;&gt;Node1</title>
<path fill="none" stroke="midnightblue" d="M45.41,-317.21C51.29,-357.9 69.79,-452.34 120,-511.5 122.94,-514.97 126.15,-518.27 129.55,-521.4"/>
<polygon fill="midnightblue" stroke="midnightblue" points="48.87,-316.67 44.07,-307.23 41.93,-317.61 48.87,-316.67"/>
</g>
<!-- Node2 -->
<g id="node3" class="node">
<title>Node2</title>
<g id="a_node3"><a xlink:href="structBipedalLocomotion_1_1GenericContainer_1_1is__vector_3_01Vector_3_01T_01_4_01_4.html" target="_top" xlink:title="is_vector is a utility metafunction used to check if T is a GenericContainer::Vector.">
<polygon fill="none" stroke="black" points="158,-461 158,-502 292,-502 292,-461 158,-461"/>
<text text-anchor="start" x="166" y="-490" font-family="Helvetica,sans-Serif" font-size="10.00">BipedalLocomotion::</text>
<text text-anchor="start" x="166" y="-479" font-family="Helvetica,sans-Serif" font-size="10.00">GenericContainer::is</text>
<text text-anchor="middle" x="225" y="-468" font-family="Helvetica,sans-Serif" font-size="10.00">_vector&lt; Vector&lt; T &gt; &gt;</text>
</a>
</g>
</g>
<!-- Node0&#45;&gt;Node2 -->
<g id="edge2" class="edge">
<title>Node0&#45;&gt;Node2</title>
<path fill="none" stroke="midnightblue" d="M47.41,-317.26C55.76,-350.09 77.04,-415.76 120,-451.5 130.83,-460.51 144.25,-466.82 157.8,-471.23"/>
<polygon fill="midnightblue" stroke="midnightblue" points="50.71,-316.03 44.98,-307.13 43.9,-317.67 50.71,-316.03"/>
</g>
<!-- Node3 -->
<g id="node4" class="node">
<title>Node3</title>
<g id="a_node4"><a xlink:href="structBipedalLocomotion_1_1has__square__bracket__operator_3_01T_00_01void__t_3_01decltype_07std_8a0c2bf9f1f70e604c7a6793700f89fd.html" target="_top" xlink:title="has_square_bracket_operator is used to build a type&#45;dependent expression that check if an element has...">
<polygon fill="none" stroke="black" points="145,-379 145,-442 305,-442 305,-379 145,-379"/>
<text text-anchor="start" x="153" y="-430" font-family="Helvetica,sans-Serif" font-size="10.00">BipedalLocomotion::</text>
<text text-anchor="start" x="153" y="-419" font-family="Helvetica,sans-Serif" font-size="10.00">has_square_bracket_operator</text>
<text text-anchor="start" x="153" y="-408" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; T, void_t&lt; decltype(std</text>
<text text-anchor="start" x="153" y="-397" font-family="Helvetica,sans-Serif" font-size="10.00">::declval&lt; T &gt;()[std::declval</text>
<text text-anchor="middle" x="225" y="-386" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; int &gt;()])&gt; &gt;</text>
</a>
</g>
</g>
<!-- Node0&#45;&gt;Node3 -->
<g id="edge3" class="edge">
<title>Node0&#45;&gt;Node3</title>
<path fill="none" stroke="midnightblue" d="M57.83,-314.68C72.35,-330.64 95.76,-354.18 120,-369.5 127.79,-374.43 136.27,-378.93 144.92,-383.01"/>
<polygon fill="midnightblue" stroke="midnightblue" points="60.35,-312.25 51.09,-307.11 55.13,-316.91 60.35,-312.25"/>
</g>
<!-- Node4 -->
<g id="node5" class="node">
<title>Node4</title>
<g id="a_node5"><a xlink:href="structBipedalLocomotion_1_1has__type__member_3_01T_00_01void__t_3_01typename_01T_1_1value__type_01_4_01_4.html" target="_top" xlink:title="has_type_member is a utility metafunction to detect if typename T defines value_type&lt;">
<polygon fill="none" stroke="black" points="161,-307.5 161,-359.5 289,-359.5 289,-307.5 161,-307.5"/>
<text text-anchor="start" x="169" y="-347.5" font-family="Helvetica,sans-Serif" font-size="10.00">BipedalLocomotion::</text>
<text text-anchor="start" x="169" y="-336.5" font-family="Helvetica,sans-Serif" font-size="10.00">has_type_member&lt; T,</text>
<text text-anchor="start" x="169" y="-325.5" font-family="Helvetica,sans-Serif" font-size="10.00"> void_t&lt; typename T::</text>
<text text-anchor="middle" x="225" y="-314.5" font-family="Helvetica,sans-Serif" font-size="10.00">value_type &gt; &gt;</text>
</a>
</g>
</g>
<!-- Node0&#45;&gt;Node4 -->
<g id="edge4" class="edge">
<title>Node0&#45;&gt;Node4</title>
<path fill="none" stroke="midnightblue" d="M93.95,-307.63C114.68,-311.76 138.86,-316.57 160.71,-320.91"/>
<polygon fill="midnightblue" stroke="midnightblue" points="94.56,-304.19 84.07,-305.67 93.2,-311.05 94.56,-304.19"/>
</g>
<!-- Node5 -->
<g id="node6" class="node">
<title>Node5</title>
<g id="a_node6"><a xlink:href="structBipedalLocomotion_1_1is__data__available_3_01T_00_01void__t_3_01decltype_07std_1_1declval_e2c355f23b76c51122c965048e9aff0f.html" target="_top" xlink:title="is_data_available is a utility metafunction to detect if typename T contains the data()&lt;">
<polygon fill="none" stroke="black" points="150.5,-236.5 150.5,-288.5 299.5,-288.5 299.5,-236.5 150.5,-236.5"/>
<text text-anchor="start" x="158.5" y="-276.5" font-family="Helvetica,sans-Serif" font-size="10.00">BipedalLocomotion::</text>
<text text-anchor="start" x="158.5" y="-265.5" font-family="Helvetica,sans-Serif" font-size="10.00">is_data_available&lt; T,</text>
<text text-anchor="start" x="158.5" y="-254.5" font-family="Helvetica,sans-Serif" font-size="10.00"> void_t&lt; decltype(std</text>
<text text-anchor="middle" x="225" y="-243.5" font-family="Helvetica,sans-Serif" font-size="10.00">::declval&lt; T &gt;().data())&gt; &gt;</text>
</a>
</g>
</g>
<!-- Node0&#45;&gt;Node5 -->
<g id="edge5" class="edge">
<title>Node0&#45;&gt;Node5</title>
<path fill="none" stroke="midnightblue" d="M94.06,-287.63C111.54,-284.25 131.47,-280.39 150.37,-276.74"/>
<polygon fill="midnightblue" stroke="midnightblue" points="93.23,-284.22 84.07,-289.56 94.55,-291.1 93.23,-284.22"/>
</g>
<!-- Node6 -->
<g id="node7" class="node">
<title>Node6</title>
<g id="a_node7"><a xlink:href="structBipedalLocomotion_1_1is__iterable_3_01T_00_01void__t_3_01decltype_07std_1_1declval_3_01T_0b7c4298ccd943ffa7636ecb5c7dbb6f6.html" target="_top" xlink:title="Implementation of the c++17 void_t&lt;.">
<polygon fill="none" stroke="black" points="143,-154 143,-217 307,-217 307,-154 143,-154"/>
<text text-anchor="start" x="151" y="-205" font-family="Helvetica,sans-Serif" font-size="10.00">BipedalLocomotion::</text>
<text text-anchor="start" x="151" y="-194" font-family="Helvetica,sans-Serif" font-size="10.00">is_iterable&lt; T, void</text>
<text text-anchor="start" x="151" y="-183" font-family="Helvetica,sans-Serif" font-size="10.00">_t&lt; decltype(std::declval</text>
<text text-anchor="start" x="151" y="-172" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; T &gt;().begin()), decltype</text>
<text text-anchor="middle" x="225" y="-161" font-family="Helvetica,sans-Serif" font-size="10.00">(std::declval&lt; T &gt;().end())&gt; &gt;</text>
</a>
</g>
</g>
<!-- Node0&#45;&gt;Node6 -->
<g id="edge6" class="edge">
<title>Node0&#45;&gt;Node6</title>
<path fill="none" stroke="midnightblue" d="M58.43,-280.36C73.07,-264.91 96.29,-242.39 120,-227.5 127.17,-222.99 134.91,-218.81 142.82,-214.96"/>
<polygon fill="midnightblue" stroke="midnightblue" points="55.84,-278.01 51.6,-287.72 60.97,-282.77 55.84,-278.01"/>
</g>
<!-- Node7 -->
<g id="node8" class="node">
<title>Node7</title>
<g id="a_node8"><a xlink:href="structBipedalLocomotion_1_1is__resizable_3_01T_00_01void__t_3_01decltype_07std_1_1declval_3_01T_1c3fd0b8ee07ddf485f95562f4b7435c.html" target="_top" xlink:title="is_resizable is used to build a type&#45;dependent expression that check if an element is resizable (i....">
<polygon fill="none" stroke="black" points="152.5,-72 152.5,-135 297.5,-135 297.5,-72 152.5,-72"/>
<text text-anchor="start" x="160.5" y="-123" font-family="Helvetica,sans-Serif" font-size="10.00">BipedalLocomotion::</text>
<text text-anchor="start" x="160.5" y="-112" font-family="Helvetica,sans-Serif" font-size="10.00">is_resizable&lt; T, void</text>
<text text-anchor="start" x="160.5" y="-101" font-family="Helvetica,sans-Serif" font-size="10.00">_t&lt; decltype(std::declval</text>
<text text-anchor="start" x="160.5" y="-90" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; T &gt;().resize(std::declval</text>
<text text-anchor="middle" x="225" y="-79" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; int &gt;()))&gt; &gt;</text>
</a>
</g>
</g>
<!-- Node0&#45;&gt;Node7 -->
<g id="edge7" class="edge">
<title>Node0&#45;&gt;Node7</title>
<path fill="none" stroke="midnightblue" d="M47.95,-277.84C57,-245.71 79.14,-181.81 120,-144.5 129.32,-135.99 140.61,-129.16 152.27,-123.71"/>
<polygon fill="midnightblue" stroke="midnightblue" points="44.5,-277.21 45.29,-287.78 51.26,-279.03 44.5,-277.21"/>
</g>
<!-- Node8 -->
<g id="node9" class="node">
<title>Node8</title>
<g id="a_node9"><a xlink:href="structBipedalLocomotion_1_1is__size__available_3_01T_00_01void__t_3_01decltype_07std_1_1declval_b4934191254068a1705a6471e404cc79.html" target="_top" xlink:title="is_size_available is a utility metafunction to detect if typename T contains the size()&lt;">
<polygon fill="none" stroke="black" points="151.5,-0.5 151.5,-52.5 298.5,-52.5 298.5,-0.5 151.5,-0.5"/>
<text text-anchor="start" x="159.5" y="-40.5" font-family="Helvetica,sans-Serif" font-size="10.00">BipedalLocomotion::</text>
<text text-anchor="start" x="159.5" y="-29.5" font-family="Helvetica,sans-Serif" font-size="10.00">is_size_available&lt; T,</text>
<text text-anchor="start" x="159.5" y="-18.5" font-family="Helvetica,sans-Serif" font-size="10.00"> void_t&lt; decltype(std</text>
<text text-anchor="middle" x="225" y="-7.5" font-family="Helvetica,sans-Serif" font-size="10.00">::declval&lt; T &gt;().size())&gt; &gt;</text>
</a>
</g>
</g>
<!-- Node0&#45;&gt;Node8 -->
<g id="edge8" class="edge">
<title>Node0&#45;&gt;Node8</title>
<path fill="none" stroke="midnightblue" d="M43.78,-277.84C46.59,-233.31 59.63,-123.88 120,-62.5 128.71,-53.65 139.7,-46.97 151.25,-41.93"/>
<polygon fill="midnightblue" stroke="midnightblue" points="40.28,-277.75 43.25,-287.91 47.27,-278.11 40.28,-277.75"/>
</g>
</g>
</svg>
